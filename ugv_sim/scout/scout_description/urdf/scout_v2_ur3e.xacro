<?xml version="1.0"?>

<robot name="scout_v2" 
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/" />
    <xacro:arg name="urdf_extras" default="empty.urdf" />

    <xacro:include filename="$(find scout_description)/urdf/scout_wheel_type1.xacro" />
    <xacro:include filename="$(find scout_description)/urdf/scout_wheel_type2.xacro" />

    <!-- <xacro:include filename"$(find scout_description)/urdf/cylinder.xacro" /> -->

    <!-- Variables -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- Vehicle Geometries -->
    <xacro:property name="base_x_size" value="0.9250000" />
    <xacro:property name="base_y_size" value="0.380000" />
    <xacro:property name="base_z_size" value="0.210000" />

    <xacro:property name="wheelbase" value="0.498" />
    <xacro:property name="track" value="0.58306" />
    <xacro:property name="wheel_vertical_offset" value="-0.0702" />

    <xacro:property name="wheel_length" value="1.1653e-01" />
    <xacro:property name="wheel_radius" value="1.6459e-01" />

    <!-- Base link -->
    <link name="scout_base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://scout_description/meshes/base_link.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0.008" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
        </collision>
        <collision>
            <origin xyz="0 0 ${base_z_size/6}" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size/6} ${base_y_size*1.65} ${base_z_size/3}"/>
            </geometry>
        </collision>
    </link>

    <!-- <joint name="chassis_link_joint" type="fixed">
        <origin xyz="0 0 ${wheel_radius - wheel_vertical_offset}" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="chassis_link" />
    </joint> -->

    <link name="inertial_link">
        <inertial>
            <mass value="50" />
            <!-- <mass value="50" /> -->
            <!-- <origin xyz="-0.00065 -0.085 0.062" />
            <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" /> -->
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="scout_base_link" />
        <child link="inertial_link" />
    </joint>

    <!-- For testing, hang the robot up in the air -->
    <!-- <link name="world" />
    <joint name="world_to_base_link=" type="fixed">
        <origin xyz="0 0 0.5" rpy="0 0 0" />
        <parent link="world"/>
        <child link="base_link"/>
    </joint> -->

    <!-- Scout wheel macros -->
    <!-- wheel labeled from 0 to 3, conter-clockwise, starting from front right wheel -->
    <!-- motor 1 and 2 (left side) are mechanically installed in a reversed direction -->
    <xacro:scout_wheel_type1 wheel_prefix="front_right">
        <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type2 wheel_prefix="front_left">
        <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type2>
    <xacro:scout_wheel_type1 wheel_prefix="rear_left">
        <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type2 wheel_prefix="rear_right">
        <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type2>
    
    <!-- UR3E Insert -->

    <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
    <!-- <xacro:include filename="$(find ur_description)/urdf/inc/ur3e_macro.xacro"/>
    <xacro:ur3e_robot 
      prefix="ur3e" 
      originx="${-base_y_size+0.1}"
      originy="0"
      originz="${0.5 * 0.152}"
      /> -->

    <!--Parameter files -->
    <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/ur3e/joint_limits.yaml"/>
    <xacro:arg name="kinematics_params" default="$(find ur_description)/config/ur3e/default_kinematics.yaml"/>
    <xacro:arg name="physical_params" default="$(find ur_description)/config/ur3e/physical_parameters.yaml"/>
    <xacro:arg name="visual_params" default="$(find ur_description)/config/ur3e/visual_parameters.yaml"/>

    <!--Common parameters -->
    <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface" doc="The hardware_interface to expose for each joint in the simulated robot (one of: [PositionJointInterface, VelocityJointInterface, EffortJointInterface])"/>
    <xacro:arg name="safety_limits" default="false" doc="If True, enable the safety limits controller"/>
    <xacro:arg name="safety_pos_margin" default="0.15" doc="The lower/upper limits in the safety controller" />
    <xacro:arg name="safety_k_position" default="20" doc="Used to set k position in the safety controller" />
<!-- 
    <xacro:include filename="$(find ur_gazebo)/urdf/ur_macro.xacro"/>
    <xacro:ur_robot_gazebo
      prefix=""
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_params)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      transmission_hw_interface="$(arg transmission_hw_interface)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
      originx="${-base_y_size+0.1}"
      originy="0"
      originz="${base_z_size}"
      /> -->


    <xacro:include filename="$(find ur_description)/urdf/inc/ur_macro.xacro"/>
    <xacro:ur_robot
      prefix=""
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_params)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      transmission_hw_interface="$(arg transmission_hw_interface)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
      />


    <joint name="scout_ur3e_joint" type="fixed">
      <parent link="scout_base_link"/>
      <child link="base_link"/>
      <axis xyz="0 0 0" rpy="0 0 0" />
      <origin xyz="${base_y_size-0.1} 0 ${base_z_size-0.09}" rpy="0 0 ${pi}"/>
    </joint>


    <!--Cylinder insert-->
    <!-- <xacro:property name="r" value="0.02" />
    <xacro:property name="h" value="0.25" /> -->

    <!-- <link name="cylinder_link">
    <visual>
      <origin xyz="${base_y_size-0.1} ${0} ${base_z_size}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${h}" radius="${r}"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.05"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${h}" radius="${r}"/>
      </geometry>
    </collision>
  </link> -->

  <!-- <gazebo reference="cylinder_link">
    <material>Gazebo/Grey</material> 
    <dampingFactor>0.005</dampingFactor>
    <kp>1000000</kp>
    <kd>1.0</kd>
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
    <minDepth>0.001</minDepth>
  </gazebo>

  <joint name="cylinder_joint" type="fixed">
      <parent link="base_link"/>
      <child link="cylinder_link"/>
      <axis xyz="0 0 0" rpy="0 0 0" />
  </joint> -->

    <!-- Additional definitions -->
    <xacro:include filename="$(arg urdf_extras)" />

    <!-- Gazebo definitions  -->
    <xacro:include filename="$(find scout_description)/urdf/scout_v2.gazebo" />
</robot>
